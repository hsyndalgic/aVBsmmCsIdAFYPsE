"0",""
"0","ctrl <- trainControl(method = ""cv"", "
"0","                     number = 5, "
"0","                     summaryFunction = twoClassSummary,"
"0","                     classProbs = TRUE,"
"0","                     savePredictions = TRUE)"
"0",""
"0",""
"0",""
"0","glm_tune <- train(train_x, "
"0","                  train_y, "
"0","                  method = ""glm"","
"0","                  trControl = ctrl)"
"2","The metric ""Accuracy"" was not in the result set. ROC will be used instead."
"2","Setting row names on a tibble is deprecated."
"2","Setting row names on a tibble is deprecated."
"2","Setting row names on a tibble is deprecated."
"2","Setting row names on a tibble is deprecated."
"2","Setting row names on a tibble is deprecated."
"2","Setting row names on a tibble is deprecated."
"0"," "
"0","glm_tune"
"1","Generalized Linear Model"
"1"," "
"1","

"
"1","32001"
"1",""
"1"," samples"
"1","
"
"1","   13"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","    2"
"1"," "
"1","classes:"
"1"," "
"1","'no', 'yes'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (5 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","25601, 25601, 25600, 25600, 25602"
"1"," "
"1","
"
"1","Resampling results"
"1",":

"
"1",""
"1","  ROC      "
"1","  Sens   "
"1","  Spec     "
"1","
"
"1","  0.9194356"
"1","  0.98639"
"1","  0.2654381"
"1","
"
"1","
"
"1",""
"0","head(glm_tune$pred$yes)"
"1","[1]"
"1"," 0.07322140"
"1"," 0.02802114"
"1"," 0.04777762"
"1"," 0.01687847"
"1"," 0.01860692"
"1"," 0.02702149"
"1","
"
"0","defaultSummary(data.frame(obs = test_y, "
"0","                          pred = predict(glm_tune, test_x)))"
"1"," Accuracy "
"1","    Kappa "
"1","
"
"1","0.9313664 "
"1","0.3192738 "
"1","
"
"0","#egitim"
"0","confusionMatrix(data = predict(glm_tune, train_x),"
"0","                reference = train_y, positive = ""yes"")"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    no"
"1","   yes"
"1","
       no "
"1"," 29283"
"1","  1702"
"1","
       yes"
"1","   401"
"1","   615"
"1","
"
"1",""
"1","                         "
"1","                "
"1","
"
"1","               Accuracy :"
"1"," 0.9343         "
"1","
"
"1","                 95% CI :"
"1"," (0.9315, 0.937)"
"1","
"
"1","    No Information Rate :"
"1"," 0.9276         "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1.506e-06      "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","                  Kappa :"
"1"," 0.3399         "
"1","
"
"1","                         "
"1","                "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," < 2.2e-16      "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","            Sensitivity :"
"1"," 0.26543        "
"1","
"
"1","            Specificity :"
"1"," 0.98649        "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.60531        "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.94507        "
"1","
"
"1","             Prevalence :"
"1"," 0.07240        "
"1","
"
"1","         Detection Rate :"
"1"," 0.01922        "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.03175        "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.62596        "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","       'Positive' Class :"
"1"," yes            "
"1","
"
"1","                         "
"1","                "
"1","
"
"0","confusionMatrix(data = predict(glm_tune, test_x),"
"0","                reference = test_y, positive = ""yes"")"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","   no"
"1","  yes"
"1","
       no "
"1"," 7302"
"1","  431"
"1","
       yes"
"1","  118"
"1","  148"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9314          "
"1","
"
"1","                 95% CI :"
"1"," (0.9256, 0.9368)"
"1","
"
"1","    No Information Rate :"
"1"," 0.9276          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 0.1008          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.3193          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.25561         "
"1","
"
"1","            Specificity :"
"1"," 0.98410         "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.55639         "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.94426         "
"1","
"
"1","             Prevalence :"
"1"," 0.07238         "
"1","
"
"1","         Detection Rate :"
"1"," 0.01850         "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.03325         "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.61986         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," yes             "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","roc(glm_tune$pred$obs,"
"0","    glm_tune$pred$yes,"
"0","    levels = rev(levels(glm_tune$pred$obs)),"
"0","    plot = TRUE, print.auc = TRUE)"
"2","Error in roc(glm_tune$pred$obs, glm_tune$pred$yes, levels = rev(levels(glm_tune$pred$obs)),  : 
  ""roc"" fonksiyonu bulunamadÄ±
"
